{"version":3,"sources":["pages/Profile/account.js","utils/ipfsApi.js"],"names":["Account","_ref","isMyAccount","account","web3","useSelector","state","user","dispatch","useDispatch","_useState","useState","_useState2","Object","D_Workspace_0906_NFT_Malysia_project_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","isOpen","setIsOpen","_useState3","_useState4","isOpenProfile","setIsOpenProfile","_useState5","name","_useState6","profile_name","setProfileName","_useState7","bio","_useState8","profile_bio","setProfileBio","_useState9","twitter","_useState10","profile_twitter","setProfileTwitter","_useState11","telegram","_useState12","profile_telegram","setProfileTelegram","_useState13","instagram","_useState14","profile_instagram","setProfileInstagram","_useState15","avatar","_useState16","avatarImg","setAvartarImg","_useState17","_useState18","buffer","setBuffer","_useState19","_useState20","isProcessing","setIsProcessing","useEffect","restApi","get","concat","then","response","data","description","clipboard","useClipboard","copiedTimeout","closeModal","e","preventDefault","handleClick","React","useCallback","url","copy","updateProfile","_ref2","D_Workspace_0906_NFT_Malysia_project_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_Workspace_0906_NFT_Malysia_project_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","image","result","userAddress","wrap","_context","prev","next","ipfs","files","add","Buffer","from","sent","hash","userAccount","setProfile","post","address","toast","success","stop","_x","apply","this","arguments","react__WEBPACK_IMPORTED_MODULE_3___default","createElement","Fragment","className","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","size","src","style","cursor","onClick","width","height","preserveAspectRatio","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x","y","shortenHex","copied","color","href","target","rel","aria-hidden","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","p","bg","borderColor","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","Text","icononly","icon","position","top","right","mt","mr","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","mb","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","h3","px","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","value","h4","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","py","borderTop","justifyContent","Outline","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","for","type","id","onChange","URL","createObjectURL","reader","FileReader","onabort","console","log","onerror","onload","binaryStr","readAsArrayBuffer","row","sm","reactstrap__WEBPACK_IMPORTED_MODULE_16__","placeholder","rows","reactstrap__WEBPACK_IMPORTED_MODULE_17__","require","host","port","protocol"],"mappings":"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","file":"static/js/4.3494cbd6.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Avatar, QR, Box, Flex, Modal, Button, Card, Heading } from 'rimble-ui';\r\nimport { toast } from 'react-toastify';\r\nimport { Col, FormGroup, Label, Spinner } from 'reactstrap';\r\nimport { useClipboard } from 'use-clipboard-copy';\r\nimport { shortenHex } from '../../utils/helper';\r\nimport ipfs from '../../utils/ipfsApi.js';\r\nimport restApi from '../../utils/restApi';\r\nimport { setProfile } from '../../actions/user';\r\nconst Account = ({ isMyAccount, account }) => {\r\n  const web3 = useSelector((state) => state.web3);\r\n  const user = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isOpenProfile, setIsOpenProfile] = useState(false);\r\n  const [profile_name, setProfileName] = useState(user.name);\r\n  const [profile_bio, setProfileBio] = useState(user.bio);\r\n  const [profile_twitter, setProfileTwitter] = useState(user.twitter);\r\n  const [profile_telegram, setProfileTelegram] = useState(user.telegram);\r\n  const [profile_instagram, setProfileInstagram] = useState(user.instagram);\r\n  const [avatarImg, setAvartarImg] = useState(user.avatar);\r\n  const [buffer, setBuffer] = useState(null);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"oka\")\r\n    if (account) {\r\n      restApi.get(`user/${account}`).then(response => {\r\n        if (response) {\r\n          const data = response.data.user;\r\n          \r\n          setProfileName(data.name ? data.name : user.name);\r\n          setAvartarImg(data.avatar ? data.avatar : user.avatar);\r\n          setProfileBio(\r\n            data.description ? data.description : user.bio\r\n          );\r\n          setProfileTwitter(\r\n            data.twitter ? data.twitter : user.twitter\r\n          );\r\n          setProfileTelegram(\r\n            data.telegram ? data.telegram : user.telegram\r\n          );\r\n          setProfileInstagram(\r\n            data.instagram ? data.instagram : user.instagram\r\n          );\r\n        }\r\n      })\r\n    }\r\n    // const data = {\r\n    //   name: '',\r\n    //   avatar: '',\r\n    //   description: '',\r\n    //   twitter: '',\r\n    //   telegram: '',\r\n    //   instagram: ''\r\n    // }\r\n    // setProfileName(data.name ? data.name : user.name);\r\n    // setAvartarImg(data.avatar ? data.avatar : user.avatar);\r\n    // setProfileBio(\r\n    //   data.description ? data.description : user.bio\r\n    // );\r\n    // setProfileTwitter(\r\n    //   data.twitter ? data.twitter : user.twitter\r\n    // );\r\n    // setProfileTelegram(\r\n    //   data.telegram ? data.telegram : user.telegram\r\n    // );\r\n    // setProfileInstagram(\r\n    //   data.instagram ? data.instagram : user.instagram\r\n    // );\r\n  }, [account]);\r\n\r\n  const clipboard = useClipboard({\r\n    copiedTimeout: 1000, // timeout duration in milliseconds\r\n  });\r\n\r\n  const closeProfileModal = (e) => {\r\n    e.preventDefault();\r\n    setIsOpenProfile(false);\r\n  };\r\n  const openProfileModal = (e) => {\r\n    e.preventDefault();\r\n    setIsOpenProfile(true);\r\n  };\r\n  const closeModal = (e) => {\r\n    e.preventDefault();\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const openModal = (e) => {\r\n    e.preventDefault();\r\n    setIsOpen(true);\r\n  };\r\n\r\n  // Copy User Address from dashboard\r\n  const handleClick = React.useCallback(() => {\r\n    const url = `${account}`;\r\n    clipboard.copy(url); // programmatically copying a value\r\n  }, [clipboard.copy]);\r\n\r\n  // Handle File Input\r\n  const handleFileInput = (e) => {\r\n    setAvartarImg(URL.createObjectURL(e.target.files[0]));\r\n    const reader = new FileReader();\r\n    reader.onabort = () => console.log('file reading was aborted');\r\n    reader.onerror = () => console.log('file reading has failed');\r\n    reader.onload = () => {\r\n      // Do whatever you want with the file contents\r\n      const binaryStr = reader.result;\r\n      setBuffer(binaryStr);\r\n    };\r\n    reader.readAsArrayBuffer(e.target.files[0]);\r\n  };\r\n  // Update profile\r\n  const updateProfile = async (e) => {\r\n    setIsProcessing(true);\r\n    let image = avatarImg;\r\n    if (buffer) {\r\n      const result = await ipfs.files.add(Buffer.from(buffer));\r\n      image = `https://ipfs.io/ipfs/${result[0].hash}`;\r\n    }\r\n\r\n    const userAddress = `${web3.userAccount}`;\r\n    dispatch(\r\n      setProfile({\r\n        name: profile_name,\r\n        bio: profile_bio,\r\n        avatar: image,\r\n        twitter: profile_twitter,\r\n        telegram: profile_telegram,\r\n        instagram: profile_instagram,\r\n      })\r\n    );\r\n    await restApi.post(`user/update`, {\r\n      address: userAddress,\r\n      name: profile_name,\r\n      description: profile_bio,\r\n      avatar: image,\r\n      twitter: profile_twitter,\r\n      telegram: profile_telegram,\r\n      instagram: profile_instagram,\r\n    })\r\n\r\n    setIsOpenProfile(false);\r\n    toast.success('User Profile has been updated');\r\n    setIsProcessing(false);\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-8 mx-auto text-center\">\r\n            <Avatar\r\n              size=\"100px\"\r\n              src={avatarImg || ''}\r\n              className=\"mx-auto text-center\"\r\n            />\r\n            <h1 className=\"intro-hero__title\">\r\n              {isMyAccount ? 'My' : `${profile_name}'S`} PROFILE{' '}\r\n              {isMyAccount ? <span\r\n                className=\"pb-2\"\r\n                style={{ cursor: 'pointer' }}\r\n                onClick={openProfileModal}\r\n              >\r\n                <svg\r\n                  width=\"1em\"\r\n                  height=\"1em\"\r\n                  preserveAspectRatio=\"xMidYMid meet\"\r\n                  viewBox=\"0 0 24 24\"\r\n                >\r\n                  <g fill=\"none\">\r\n                    <path\r\n                      d=\"M16.474 5.408l2.118 2.117m-.756-3.982L12.109 9.27a2.118 2.118 0 0 0-.58 1.082L11 13l2.648-.53c.41-.082.786-.283 1.082-.579l5.727-5.727a1.853 1.853 0 1 0-2.621-2.621z\"\r\n                      stroke=\"#626262\"\r\n                      strokeWidth=\"2\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    />\r\n                    <path\r\n                      d=\"M19 15v3a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h3\"\r\n                      stroke=\"#626262\"\r\n                      strokeWidth=\"2\"\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                    />\r\n                  </g>\r\n                  <rect\r\n                    x=\"0\"\r\n                    y=\"0\"\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    fill=\"rgba(0, 0, 0, 0)\"\r\n                  />\r\n                </svg>\r\n              </span> : null}\r\n            </h1>\r\n            <div>\r\n              <span>\r\n                {shortenHex(`${account}`, 7)}\r\n              </span>\r\n              <span\r\n                className=\"button-text mx-1\"\r\n                onClick={handleClick}\r\n                style={{ cursor: 'pointer' }}\r\n              >\r\n                {!clipboard.copied ? (\r\n                  <svg\r\n                    color=\"inherit\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    height=\"24px\"\r\n                    width=\"24px\"\r\n                    fill=\"currentcolor\"\r\n                    className=\"sc-kgAjT ciVWZA\"\r\n                  >\r\n                    <path d=\"M0 0h24v24H0z\" fill=\"none\"></path>\r\n                    <path d=\"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm2 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z\"></path>\r\n                  </svg>\r\n                ) : (\r\n                  <svg\r\n                    fill=\"currentcolor\"\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path d=\"M20.285 2l-11.285 11.567-5.286-5.011-3.714 3.716 9 8.728 15-15.285z\" />\r\n                  </svg>\r\n                )}\r\n              </span>\r\n              <span\r\n                className=\"button-text mx-1\"\r\n                style={{ cursor: 'pointer' }}\r\n                onClick={openModal}\r\n              >\r\n                <svg\r\n                  color=\"inherit\"\r\n                  viewBox=\"0 0 24 24\"\r\n                  height=\"24px\"\r\n                  width=\"24px\"\r\n                  fill=\"currentcolor\"\r\n                  className=\"sc-giadOv kMbFvz\"\r\n                >\r\n                  <path d=\"M12 8c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4zm-7 7H3v4c0 1.1.9 2 2 2h4v-2H5v-4zM5 5h4V3H5c-1.1 0-2 .9-2 2v4h2V5zm14-2h-4v2h4v4h2V5c0-1.1-.9-2-2-2zm0 16h-4v2h4c1.1 0 2-.9 2-2v-4h-2v4z\"></path>\r\n                </svg>\r\n              </span>\r\n            </div>\r\n            <p className=\"my-3\">{profile_bio}</p>\r\n            <ul className=\"list-inline social-nav\">\r\n              <li className=\"list-inline-item\">\r\n                <a href={profile_twitter} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  <i className=\"fab fa-twitter\"></i>\r\n                </a>\r\n              </li>\r\n              <li className=\"list-inline-item\">\r\n                <a href={profile_telegram} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  <i className=\"fab fa-telegram-plane\"></i>\r\n                </a>\r\n              </li>\r\n              <li className=\"list-inline-item\">\r\n                <a href={profile_instagram} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  <i className=\"fab fa-instagram\"></i>\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            <a href=\"/marketplace\">\r\n              <i\r\n                className=\"fas fa-chevron-left mr-3\"\r\n                aria-hidden=\"true\"\r\n              ></i>{' '}\r\n              Back To Explorer\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Modal isOpen={isOpen}>\r\n        <Card width={'420px'} p={0} bg={'#08091A'} borderColor={'#7f81a2'} color={'#f5f5f5'}>\r\n          <Button.Text\r\n            icononly\r\n            icon={'Close'}\r\n            color={'moon-gray'}\r\n            position={'absolute'}\r\n            top={0}\r\n            right={0}\r\n            mt={3}\r\n            mr={3}\r\n            onClick={closeModal}\r\n          />\r\n\r\n          <Box p={4} mb={1}>\r\n            <Heading.h3 px={4}>MY ADDRESS</Heading.h3>\r\n\r\n            <Box p={4}>\r\n              <QR\r\n                value={account}\r\n                size={300}\r\n              />\r\n            </Box>\r\n            <Box px={4}>\r\n              <Heading.h4>\r\n                {shortenHex(`${account}`, 10)}\r\n              </Heading.h4>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Flex\r\n            px={4}\r\n            py={3}\r\n            borderTop={1}\r\n            borderColor={'#4e3fce'}\r\n            justifyContent={'flex-end'}\r\n          >\r\n            <Button.Outline onClick={closeModal} borderColor={'#4e3fce'}>OK</Button.Outline>\r\n          </Flex>\r\n        </Card>\r\n      </Modal>\r\n      <Modal isOpen={isOpenProfile} size=\"lg\">\r\n        <Card p={0} bg={'#08091A'} borderColor={'#7f81a2'} color={'#f5f5f5'} className=\"overflow-auto\">\r\n          <Button.Text\r\n            icononly\r\n            icon={'Close'}\r\n            color={'moon-gray'}\r\n            position={'absolute'}\r\n            top={0}\r\n            right={0}\r\n            mt={3}\r\n            mr={3}\r\n            onClick={closeProfileModal}\r\n          />\r\n\r\n          <Box px={4}>\r\n            <Heading.h3 p={4}>Edit Profile</Heading.h3>\r\n            <Avatar\r\n              size=\"100px\"\r\n              src={avatarImg}\r\n              className=\"mx-auto text-center\"\r\n            />\r\n            <FormGroup className=\"d-flex justify-content-center align-items-center my-2\">\r\n              <Label for=\"exampleCustomFileBrowser\" className=\"btn btn-primary btn-block\">User Avatar Img</Label>\r\n              <input\r\n                type=\"file\"\r\n                id=\"exampleCustomFileBrowser\"\r\n                name=\"customFile\"\r\n                className=\"position-absolute invisible\"\r\n                onChange={handleFileInput}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup row className=\"my-2\">\r\n              <Label for=\"exampleEmail\" sm={4} size=\"lg\">\r\n                Name * :\r\n              </Label>\r\n              <Col sm={8}>\r\n                <div className=\"group-input\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    className=\"form-air\"\r\n                    value={profile_name}\r\n                    onChange={(e) => setProfileName(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup row className=\"my-2\">\r\n              <Label for=\"exampleEmail\" sm={4} size=\"lg\">\r\n                Bio * :\r\n              </Label>\r\n              <Col sm={8}>\r\n                <div className=\"group-input\">\r\n                  <textarea\r\n                    placeholder=\"A short description of your NFT\"\r\n                    className=\"form-air\"\r\n                    rows=\"2\"\r\n                    value={profile_bio}\r\n                    onChange={(e) => setProfileBio(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </FormGroup>\r\n            <FormGroup row className=\"my-2\">\r\n              <Label for=\"exampleEmail\" sm={4} size=\"lg\">\r\n                Social:\r\n              </Label>\r\n              <Col sm={8}>\r\n                <span> Twitter </span>\r\n                <div className=\"group-input\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Social: Twitter\"\r\n                    className=\"form-air\"\r\n                    value={profile_twitter}\r\n                    onChange={(e) => setProfileTwitter(e.target.value)}\r\n                  />\r\n                </div>\r\n                <span> Telegram </span>\r\n                <div className=\"group-input\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Social: Telegram\"\r\n                    className=\"form-air\"\r\n                    value={profile_telegram}\r\n                    onChange={(e) => setProfileTelegram(e.target.value)}\r\n                  />\r\n                </div>\r\n                <span> Instagram </span>\r\n                <div className=\"group-input\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Social: Instagram\"\r\n                    className=\"form-air\"\r\n                    value={profile_instagram}\r\n                    onChange={(e) => setProfileInstagram(e.target.value)}\r\n                  />\r\n                </div>\r\n              </Col>\r\n            </FormGroup>\r\n          </Box>\r\n\r\n          <Flex\r\n            px={4}\r\n            py={3}\r\n            borderTop={1}\r\n            borderColor={'#4e3fce'}\r\n            justifyContent={'flex-end'}\r\n          >\r\n            <Button.Outline onClick={updateProfile} borderColor={'#4e3fce'}>\r\n              {isProcessing ? <Spinner size=\"sm\" /> : 'OK'}\r\n            </Button.Outline>\r\n          </Flex>\r\n        </Card>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","//using the infura.io node, otherwise ipfs requires you to run a daemon on your own computer/server. See IPFS.io docs\r\nconst IPFS = require('ipfs-api');\r\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\r\n\r\n//run with local daemon\r\n// const ipfsApi = require('ipfs-api');\r\n// const ipfs = new ipfsApi('localhost', '5001', {protocol: 'http'});\r\n\r\nexport default ipfs; \r\n"],"sourceRoot":""}